<Page
    x:Class="Linker.Views.ControllerView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Linker.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d" d:DesignWidth="400" d:DesignHeight="2000">

    <Grid>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <Border Background="CornflowerBlue" RequestedTheme="Dark" Grid.ColumnSpan="2" Height="48">
            <TextBlock Text="Controller" FontWeight="Bold" FontSize="24" VerticalAlignment="Center" Margin="20,5" />
        </Border>
        <ScrollViewer Grid.Row="1">
            <StackPanel HorizontalAlignment="Center">
                <StackPanel.Resources>
                    <Style TargetType="Button">
                        <Setter Property="HorizontalAlignment" Value="Stretch" />
                        <Setter Property="Margin" Value="0,2" />
                    </Style>
                    <Style TargetType="TextBlock">
                        <Setter Property="Margin" Value="0,0,0,24" />
                        <Setter Property="TextWrapping" Value="Wrap" />
                    </Style>
                </StackPanel.Resources>

                <TextBox Header="Port" FontWeight="Bold" FontSize="18" Text="{x:Bind VM.Controller.ControllerPath, Mode=OneWay}" IsReadOnly="True" BorderThickness="0" />

                <TextBox Header="Status" FontWeight="Bold" FontSize="18" Text="{x:Bind VM.Controller.DriverStatus, Mode=OneWay}" IsReadOnly="True" BorderThickness="0" />
                <TextBox Header="Library Version" FontWeight="Bold" FontSize="18" Text="{x:Bind VM.Controller.LibraryVersion, Mode=OneWay}" IsReadOnly="True" BorderThickness="0" />
                <TextBox Header="Library Type" FontWeight="Bold" FontSize="18" Text="{x:Bind VM.Controller.LibraryTypeName, Mode=OneWay}" IsReadOnly="True" BorderThickness="0" />
                
                <ToggleSwitch OnContent="Yes" OffContent="No" IsEnabled="False" Header="Primary Controller" IsOn="{x:Bind VM.Controller.IsPrimary, Mode=OneWay}" />
                <ToggleSwitch OnContent="Yes" OffContent="No" IsEnabled="False" Header="Bridge Controller" IsOn="{x:Bind VM.Controller.IsBridgeController, Mode=OneWay}" />
                <ToggleSwitch OnContent="Yes" OffContent="No" IsEnabled="False" Header="Static Update Controller" IsOn="{x:Bind VM.Controller.IsStaticUpdateController, Mode=OneWay}" />

                <Button Content="Create New Primary Controller" Click="NewPrimary_Click" />
                <TextBlock>
                    Create a new primary controller when old primary fails. Requires SUC.
                </TextBlock>
                <Button Content="Transfer Primary Role" Click="TransferPrimary_Click" />
                <TextBlock>
                    Add a new controller to the network and make it the primary. The existing primary will become a secondary controller.
                </TextBlock>
                <Button Content="Add Device" Click="AddDevice_Click" />
                <TextBlock>
                    Start the Inclusion Process to add a Node to the Network. The Status of the Node Inclusion is communicated via Notifications. Specifically, you should monitor ControllerCommand Notifications. 
                    Results of the AddNode Command will be send as a Notification with the Notification type as Notification::Type_ControllerCommand
                </TextBlock>
                <Button Content="Add Secure Device" Click="AddSecureDevice_Click" />
                <TextBlock>
                    Start the Inclusion Process to add a Node that supports the supports Secure CC to the Network. The Status of the Node Inclusion is communicated via Notifications. Specifically, you should monitor ControllerCommand Notifications. 
                    Results of the AddNode Command will be send as a Notification with the Notification type as Notification::Type_ControllerCommand
                </TextBlock>
                <Button Content="Remove Device" Click="RemoveNode_Click" />
                <TextBlock>
                    Remove a Device from the Z-Wave Network The Status of the Node Removal is communicated via Notifications. Specifically, you should monitor ControllerCommand Notifications. 
Results of the RemoveNode Command will be send as a Notification with the Notification type as Notification::Type_ControllerCommand
                </TextBlock>
                <Button Content="Receive Configuration" Click="ReceiveConfig_Click" />
                <TextBlock>
                    Receive network configuration information from primary controller. Requires secondary. This command prepares the controller to receive Network Configuration from a Secondary Controller. 
Results of the ReceiveConfiguration Command will be send as a Notification with the Notification type as Notification::Type_ControllerCommand
                </TextBlock>
                <Button Content="Reset Controller (soft)" Click="ResetSoft_Click" />
                <TextBlock>
                    Soft Reset a PC Z-Wave Controller. Resets a controller without erasing its network configuration settings.
                </TextBlock>
                <Button Content="Reset Controller (Erase All)" Click="ResetHard_Click" />
                <TextBlock>
                    Hard Reset a PC Z-Wave Controller. Resets a controller and erases its network configuration settings. The controller becomes a primary controller ready to add devices to a new network.
                </TextBlock>
            </StackPanel>
        </ScrollViewer> 
    </Grid>
</Page>
